#!/usr/bin/env node 
"use strict";

//module dependencies
var server = require("../dist/server");
var debug = require("debug")("express:server");
var http = require("http");

//create http server
var httpPort = normalizePort(process.env.port || 8000);
var app = server.Server.bootstrap().app;
app.set("port",httpPort);
var httpServer = http.createServer(app);

//listen on provided ports 
httpServer.listen(httpPort);

//add error handler
httpServer.on("error",onError);

//listening on port 

httpServer.on("listening",onListening);

//port normalization functions 
function normalizePort(val){
	var port = parseInt(val,10);
	if(isNaN(port)){
		return val;
	}
	if(port>=0){
		return port;
	}
	return false;
}

function onError(error){
	if(error.syscall!=="listen"){
		throw error;
	}
	var bind = typeof port === "string" ? "Pipe "+port : "Port "+port;
	switch(error.code){
		case "EACCESS":
		console.error(`${bind} requires elevated privileges`);
		process.exit(1);
		break;
		case "EADDRINUSE":
		console.error(`${bind} is already in use`);
		process.exit(1);
		break;
		default:
		throw error;
	}
}
function onListening(){
	var addr = httpServer.address();
	var bind = typeof addr === "String" ? "pipe " + addr : "port "+addr.port;
	debug(`Listening on port ${bind}`);
}
